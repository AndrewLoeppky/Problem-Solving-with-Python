#
# 
#
version: '3.8'

services:

#
# copy notebooks and html files in ./notebooks on host
# to /srv/problem_solving_content and create
# a named volume holding that target
#
  content:
    build:
      context: .
      dockerfile: content.dockerfile
    image: phaustin/problem_solving_content:sep18
    volumes:
      - type: volume
        source: book2-volume
        target: /srv/problem_solving_notebooks
#
# run conda build to produce base-notebook-2020.09.05-0.tar.bz2
# for upload to anaconda:
#  docker-compose run -d --name conda conda_build tail -f
#  docker cp conda:/srv/conda_channel built_channel
#
  # conda_build:
  #   container_name: conda_build
  #   build:
  #     context: conda_build
  #     dockerfile: Dockerfile
  #   image: phaustin/conda_build:sep05

#
# start a web server at port .env:TEXT_PORT
# with the html files from book_content
#
  webserver:
    build:
      context: apache_webserver
      dockerfile: Dockerfile
    image: phaustin/webserver:sep18
    depends_on: [content]
    ports:
      - "${TEXT_PORT}:80"
    volumes:
      - book2-volume:/srv/notebooks
      - "/var/run/docker.sock:/var/run/docker.sock"
    command: bash -c
            "cp -a /srv/notebooks/_build/html/* /usr/local/apache2/htdocs/.
             && httpd-foreground
            "
#
# start a jupyter notebook with the notebooks from book_content on
# .env:NB_PORT
#
# before building be sure to make the conda lock file with
# conda-lock -f environment.yml -p linux-64
#
  user_notebook:
      build:
        context: user_notebook
        dockerfile: Dockerfile
      depends_on: [content]
      image: phaustin/user_notebook:sep17
      volumes:
        - book2-volume:/srv/notebooks
        - "/var/run/docker.sock:/var/run/docker.sock"
      networks:
        - jupyterhub
      command: jupyterhub-singleuser


  jupyterhub:
    build: hub_image
    image: phaustin/jupyterhub:sep17
    depends_on: [user_notebook]
    ports:
      - ${NB_PORT}:8000
    volumes:
      - book2-volume:/srv/notebooks
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - jupyterhub


                 
# explicitly name the network rather than letting docker_compose assign
networks:
    jupyterhub:
      driver: bridge

volumes:
  book2-volume:

